---
name: Terraform Plan

# yamllint disable-line rule:truthy
on:
  # pull_request:
  #   branches: [master, main]

  workflow_dispatch:

jobs:
  Validation:
    name: Terraform Plan Workflow
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    container:
      image: hashicorp/terraform:latest
      env:
        GIT_TOKEN: ${{ secrets.TERRAFORM_REPO_RO }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: https://github.com/github-organisation
          aws-region: ap-southeast-2
          role-to-assume: arn:aws:iam::123456789123:role/app-gith-organisation-123456789123
          role-session-name: github-organisation
  
      - name: Terraform Initialization
        run: |
          git config --global url."https://oauth2:${GIT_TOKEN}@github.com".insteadOf https://github.com
          terraform init  -backend-config="terraform_state.tfvars" -upgrade
        id: terraform_init

      - name: Terraform Validation
        run: terraform validate
        id: terraform_validate

      - name: Terraform Format and Style
        run: terraform fmt -check -diff -recursive
        id: terraform_fmt

      - name: Terraform Plan
        id: terraform_plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color --out tfplan.binary
        continue-on-error: true

      - name: Terraform JSON output
        id: terraform_json
        if: steps.terraform_plan.outcome == 'success'
        run: terraform show -json tfplan.binary > tfplan.json
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6.4.1
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `${ "${{ steps.terraform_fmt.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Format and Style üñå
            ${ "${{ steps.terraform_init.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Initialization ‚öôÔ∏è
            ${ "${{ steps.terraform_plan.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Plan üìñ
            ${ "${{ steps.terraform_validate.outcome }}" == "success" ? "\u2714" : "\u274c" } Terraform Validation ü§ñ

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.terraform_plan.outcome == 'failure'
        run: exit 1

  docs:
    name: Terraform Docs
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Render terraform docs inside the README.md and push changes back to PR branch
        uses: terraform-docs/gh-actions@main
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: "true"
